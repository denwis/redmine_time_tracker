<% time_tracker = User.current.time_tracker %>
  <% # Display actions only for time tracker's issue %>
  <% if !time_tracker.nil? && time_tracker.issue == @issue %>
    <% if time_tracker.paused %>
      <%# A time tracker is paused, display the resume action %>
      <li>
        <%= context_menu_link l(:resume_time_tracker).capitalize + ' #' + time_tracker.issue_id.to_s,
          time_trackers_resume_path,
          {:method => :post, :class => ' icon icon-resume', :update => 'time-tracker-menu'}
      %>
      </li>
    <% else %>
      <%# A time tracker is not paused, display the suspend action %>
      <li>
        <%= link_to l(:suspend_time_tracker).capitalize + ' #' + time_tracker.issue_id.to_s,
          time_trackers_suspend_path, :remote => true,
          :method => :post, :class => ' icon icon-pause', :update => 'time-tracker-menu' %>
      </li>
    <% end %>

    <%# A time tracker exists, display the stop action %>
    <li>
      <%= context_menu_link l(:stop_time_tracker).capitalize + ' #' + time_tracker.issue_id.to_s,
        time_trackers_path(:stop => true),
        {:remote => true, :method => :post, :class => ' icon icon-stop', :update => 'time-tracker-menu'}
    %>
    </li>

<% elsif @issue != time_tracker.try(:issue) && !@project.nil? && !@issue.nil? &&
    User.current.allowed_to?(:log_time, @project) %>
  <%# Time tracker is not running for selected issue, but the user has the rights to track time on this issue %>
  <%# Display the start time tracker action %>
  <li>
    <%= context_menu_link l(:start_time_tracker).capitalize + ' #' + @issue.id.to_s,
      time_trackers_start_path(:issue_id => @issue.id),
      {:class => ' icon icon-start', :update => 'time-tracker-menu'}
  %>
  </li>
<% end %>
